#include<iostream>
#include<vector>
#define INF 987654321
using namespace std;
long long dist[501];
int n, m, a, b, c;
vector<pair<int,int>> city[501];
int main() {
	cin >> n >> m;
	for (int i = 0; i < m; i++) {
		cin >> a >> b >> c;
		city[a - 1].push_back({ b - 1,c });
	}
	int next, d;
	bool ok = false;
	fill(dist, dist + n, INF);
	dist[0] = 0;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			for (auto &p : city[j]) {
				next = p.first;
				d = p.second;
				if (dist[j] != INF && dist[next] > dist[j] + d) {
					dist[next] = dist[j] + d;
					if (i == n - 1) ok = true;
				}
			}
		}
	}
	if (ok) cout << "-1";
	else {
		for (int i = 1; i < n; i++) {
			if (dist[i] == INF)cout << "-1" << '\n';
			else cout << dist[i] << '\n';
		}
	}
	return 0;
}