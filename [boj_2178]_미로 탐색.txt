#include <cstdio>
#include<iostream>
#include<queue>
using namespace std;
int a[101][101];
bool g[101][101];
int d[101][101];
int dx[] = { 0,1,-1,0 };
int dy[] = { 1,0,0,-1 };
int n, m;
void bfs(int x, int y) {
	queue < pair<int, int>> q;
	q.push(make_pair(x, y));
	d[x][y] = 1;
	g[x][y] = true;
	while (!q.empty()) {
		x = q.front().first; 
		y = q.front().second; 
		q.pop();
		for (int i = 0; i < 4; i++) {
			int nx = x + dx[i]; 
			int ny = y + dy[i];
			if (nx >= 0 && nx < n && ny >= 0 && ny < m) {
				if (a[nx][ny] == 1 && g[nx][ny] == false) {
					q.push(make_pair(nx, ny));
					d[nx][ny] = d[x][y] + 1;
					g[nx][ny] = true;
				}
			}
		}
	}
}
int main() {
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			scanf("%1d", &a[i][j]);
		}
	}
	bfs(0, 0);
	printf("%d\n", d[n-1][m-1]);
	return 0;
}