#include<string>
#include<vector>
#include<iostream>
#include<stack>
using namespace std;
string change_opposit(string str) {
    string ans = "";
    for (int i = 0; i < str.size(); i++) {
        if (i == 0)continue;
        if (i == str.size() - 1) continue;
        if (str[i] == '(') ans.push_back(')');
        else if (str[i] == ')') ans.push_back('(');
    }
    return ans;
}
bool correct(string str) {
    stack<char> st;
    for (int i = 0; i < str.size(); i++) {
        if (str[i] == '(') {
            st.push('(');
        }
        else {
            if (st.size() == 0) return false;
            else st.pop();
        }
    }
    if (st.empty()) return true;
    else return false;
}
string solution(string p) {
    string ans="",u="",v="";
    int open = 0, end = 0;
    if (!p.size()) return p;
    //2.문자열을 u,v로 분리한다.
    for (int i = 0; i < p.size(); i++) {
        if (p[i] == '(') open += 1;
        else if (p[i] == ')') end += 1;
        if (i != 0 && open == end) {
            u += p.substr(0, i + 1);
            v += p.substr(i + 1);
            break;
        }
    }
    //u가 올바른 괄호 문자열일 경우
    if (correct(u)) {
        ans += (u + solution(v));
    }
    //u가 올바른 괄호 문자열이 아니라면
    else {
        ans += "(" + solution(v) + ")";
        ans += change_opposit(u);
    }
    return ans;
}
int main() {
    string p;
    //p = "(()())()";
    p = "()))((()";
    cout << solution(p);

    return 0;
}