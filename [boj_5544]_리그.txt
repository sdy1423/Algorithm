#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
int n, a, b, c, d, score[101], ans[101];
struct RANK {
	int score, idx;
};
bool cmp(RANK r1, RANK r2) {
	if (r1.score > r2.score) return true;
	else if (r1.score == r2.score) 
		if (r1.idx > r2.idx) return true;
		else return false;
	return false;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); cout.tie(nullptr);
	cin >> n;
	for (int i = 0; i < n * (n - 1) / 2; i++) {
		cin >> a >> b >> c >> d;
		if (c > d) score[a] += 3;
		else if (c == d) score[a]+=1, score[b]+=1;
		else score[b] += 3;
	}
	vector<RANK> v;
	for (int i = 1; i <= n; i++) v.push_back({ score[i],i });
	sort(v.begin(), v.end(),cmp);
	int cnt = 1;
	for (int i = 0; i < n; i++) {
		if (!i) ans[v[i].idx] = 1;
		else 
			if (v[i].score == v[i - 1].score) ans[v[i].idx] = ans[v[i - 1].idx];
			else ans[v[i].idx] = cnt;
		cnt += 1;
	}
	for (int i = 1; i <= n; i++) cout << ans[i] << '\n';
	return 0;
}