#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
int map[21][21];
int ch[21][21];
int n;
int go(int x, int y, int d1, int d2) {
	int sub=0;
	memset(ch, 0, sizeof(ch));

	for (int i = 0; i <= d1; i++) {
		ch[x + i][y - i] = 5;
		ch[x + d2 + i][y + d2 - i] = 5;
	}
	for (int i = 0; i <= d2; i++) {
		ch[x + i][y + i] = 5;
		ch[x + d1 + i][y - d1 + i] = 5;
	}
	bool flag = false;
	for (int i = x + 1; i < x + d1 + d2; i++) {
		for (int j = 1; j <= n; j++) {
			if (!flag && ch[i][j] == 5) flag = true;
			else if (flag && ch[i][j] == 0) ch[i][j] = 5;
			else if (flag && ch[i][j] == 5) flag = false;
		}
	}

	//1번 선거구
	for (int i = 1; i < x + d1; i++) {
		for (int j = 1; j <= y; j++) {
			if (ch[i][j] == 5) break;
			else ch[i][j] = 1;
		}
	}
	//2번 선거구
	for (int i = 1; i <= x + d2; i++) {
		for (int j = n; j > y; j--) {
			if (ch[i][j] == 5) break;
			else ch[i][j] = 2;
		}
	}
	//3번선거구
	for (int i = x + d1; i <= n; i++) {
		for (int j = 1; j < y - d1 + d2; j++) {
			if (ch[i][j] == 5) break;
			else ch[i][j] = 3;
		}
	}
	//4번 선거구
	for (int i = x + d2 + 1; i <= n; i++) {
		for (int j = y - d1 + d2; j <= n; j++) {
			if (ch[i][j] == 5) continue;
			else ch[i][j] = 4;
		}
	}

	int sum[5] = { 0, };
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			switch (ch[i][j])
			{
			case 1: sum[0] += map[i][j];
				break;
			case 2: sum[1] += map[i][j];
				break;
			case 3: sum[2] += map[i][j];
				break;
			case 4: sum[3] += map[i][j];
				break;
			case 5: sum[4] += map[i][j];
				break;
			default:
				break;
			}
		}
	}
	int big = *max_element(sum, sum + 5);
	int small = *min_element(sum, sum + 5);
	sub = abs(big - small);
	return sub;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); cout.tie(nullptr);
	cin >> n;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++) {
			cin >> map[i][j];
		}
	}
	int ans = -1;
	int temp;
	for (int x = 1; x <= n; x++) {
		for (int y = 1; y <= n; y++) {
			for (int d1 = 1; d1 <= n; d1++) {
				for (int d2 = 1; d2 <= n; d2++) {
					if (x + d1 + d2 <= n && 1 <= y - d1  && y + d2 <= n) {
						temp=go(x, y, d1, d2);
						if (ans == -1) ans = temp;
						else ans = min(ans, temp);
					}
					else continue;
				}
			}
		}
	}
	cout << ans << '\n';
	return 0;
}