#include<iostream>
using namespace std;

int arr[100001];
int visited[100001];
int finished[100001];
int cnt;

void dfs(int curr) {
	visited[curr] = true;
	int next = arr[curr];
	if (visited[next] == false) {
		dfs(next);
	}
	else {
		if (finished[next] == false) {
			for (int temp = next; temp != curr; temp = arr[temp]) cnt++;
			cnt++;
		}
	}
	finished[curr] = true;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	int t;
	cin >> t;
	int N;
	while (t--) {
		cin >> N;
		for (int i = 1; i <= N; i++) {
			cin >> arr[i];
		}
		fill(visited + 1, visited + 1 + N, false);
		fill(finished + 1, finished + 1 + N, false);
		cnt = 0;
		for (int i = 1; i <= N; i++) {
			if (visited[i] == false) {
				dfs(i);
			}
		}
		cout << N-cnt << '\n';
	}
	return 0;
}