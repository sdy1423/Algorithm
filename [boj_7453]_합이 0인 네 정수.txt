#include<iostream>
#include<vector>
#include<algorithm>
typedef long long ll;
const int MAX = 4000;
using namespace std;
ll a[MAX], b[MAX], c[MAX], d[MAX];
ll ans = 0;
int n;
vector<ll> v;
void search() {
	long long left, right;
	//vector<ll>::iterator left, right;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			ll sum = a[i] + b[j];
			left = lower_bound(v.begin(), v.end(), -sum)-v.begin();
			right = upper_bound(v.begin(), v.end(), -sum) - v.begin();
			if (-sum == v[left]) {
				ans += (right - left);
			}
		}
	}
	cout << ans << '\n';
}
void input() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); cout.tie(nullptr);
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> a[i] >> b[i] >> c[i] >> d[i];
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			v.push_back(c[i] + d[j]);
		}
	}
	sort(v.begin(), v.end());
}
int main() {
	input();
	search();
	return 0;
}