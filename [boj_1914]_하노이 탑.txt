#include<iostream>
#include<string>
#include<algorithm>
using namespace std;
int N;
void hanoi(int n, int start, int via, int end) {
	if (n == 1) {
		cout << start << ' ' << end << '\n';
		return;
	}
	//맨 아래 원판을 제외한 n-1개는 중간칸으로
	hanoi(n - 1, start, end, via);
	//맨 아래 원판은 목적지로
	hanoi(1, start, via, end);
	//중간칸에 있던 n-1개를 목적지로
	hanoi(n - 1, via, start, end);
}
string add(string num1, string num2) {
	long long sum = 0;
	string result;
	while (!num1.empty() || !num2.empty() || sum) {
		if (!num1.empty()) {
			sum += (num1.back()-'0');
			num1.pop_back();
		}
		if (!num2.empty()) {
			sum += (num2.back()-'0');
			num2.pop_back();
		}
		result.push_back((sum % 10) + '0');
		sum /= 10;
	}
	reverse(result.begin(), result.end());
	return result;
}
int main() {
	cin >> N;
	//2^N-1출력
	string num = "2";

	for (int i = 0; i < N - 1; i++) {
		string temp = add(num, num);
		num = temp;
	}
	int sub = num.back()-'0';
	num.pop_back();
	sub--;
	num.push_back(sub + '0');
	cout << num << '\n';
	//경로


	if (N <= 20) {
		hanoi(N, 1, 2, 3);
	}
	return 0;
}