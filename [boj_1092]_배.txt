#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
int n, m, tmp, ans;
vector<int> Crane, Box;
void Sol() {
	while (!Box.empty()) {
		int idx = 0;
		for (int i = 0; i < Box.size(); i++) {
			if (idx == n)break;
			if (Crane[idx] >= Box[i]) {
				vector<int>::iterator iter = Box.begin() + i;
				Box.erase(iter);
				i -= 1;
				idx += 1;
			}
			else continue;
		}
		ans += 1;
	}
	cout << ans << '\n';
}
void Input() {
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> tmp;
		Crane.push_back(tmp);
	}
	cin >> m;
	for (int i = 0; i < m; i++) {
		cin >> tmp;
		Box.push_back(tmp);
	}
	sort(Crane.begin(), Crane.end(), greater<int>());
	sort(Box.begin(), Box.end(), greater<int>());
}
int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	Input();
	if (Crane[0] < Box[0])cout << -1 << '\n';
	else Sol();
	return 0;
}