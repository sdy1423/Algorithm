#include<iostream>
#include<string>
#include<map>
using namespace std;
struct INFO {
	int index;
	string name;
	int parent;
	int sum;
};
INFO info[200001];
int t, f, idx[2];
string name[2];
int find(int n) {
	if (info[n].parent == n) return n;
	else {
		return info[n].parent = find(info[n].parent);
	}
}
void merge(int a, int b) {
	a = find(a);
	b = find(b);
	if (a == b)return;
	else {
		info[a].parent = b;
		info[b].sum += info[a].sum;
	}
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	cin >> t;
	map<string, int> map;
	while (t--) {
		cin >> f;
		map.clear();
		for (int i = 0; i < f; i++) {
			cin >> name[0] >> name[1];
			for (int j = 0; j < 2; j++) {
				if (map.find(name[j]) == map.end()) { //없으면
					info[i * 2 + j] = { i * 2 + j , name[j], i * 2 + j, 1 };	
					idx[j] = i * 2 + j;
					map.insert({ name[j],i * 2 + j });
				}
				else { //있으면 
					idx[j] = map.find(name[j])->second;
				}
			}
			merge(idx[0],idx[1]);
			cout << info[find(map.find(name[0])->second)].sum << '\n';
		}
	}
	return 0;
}