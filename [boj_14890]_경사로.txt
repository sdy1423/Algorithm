#include<iostream>
#include<vector>
#include<cstring>
using namespace std;
bool go(vector<int>& a,int n, int l) {
	bool ok[101];
	memset(ok, false, sizeof(ok));
	for (int i = 1; i < n; i++) {
		if (a[i] == a[i - 1]) {
			continue;
		}
		else {
			int temp;
			temp = a[i] - a[i - 1];
			if (temp < 0)temp = -temp;
			if (temp > 1) return false;

			if (a[i] - a[i - 1] > 0) {//상승
				if ((i - l) < 0) return false;
				for (int j = 0; j < l; j++) {
					if (a[i - 1] != a[i - 1 - j]) return false;
					if (ok[i - 1 - j] == true) return false;
					ok[i - 1 - j] = true;
				}

			}
			else if (a[i] - a[i - 1] < 0) {//하강
				if (i + l > n) return false;
				for (int j = 0; j < l; j++) {
					if (a[i] != a[i + j]) return false;
					if (ok[i + j] == true) return false;
					ok[i + j] = true;
				}
			}
		}
	}
	return true;
}
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr); cout.tie(nullptr);
	int map[101][101];
	int n, l;
	cin >> n >> l;
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			cin >> map[i][j];
		}
	}
	int cnt = 0;
	for (int i = 0; i < n; i++) {
		vector<int> d;
		for (int j = 0; j < n; j++) {
			d.push_back(map[i][j]);
		}
		if (go(d, n, l)) {
			cnt++;
			//cout << i << " 행" << '\n';
		}
	}
	for (int j = 0; j < n; j++) {
		vector<int> d;
		for (int i = 0; i < n; i++) {
			d.push_back(map[i][j]);
		}
		if (go(d, n, l)) {
			cnt++;
			//cout << j << " 열" << '\n';
		}
	}
	cout << cnt << '\n';
	return 0;
}