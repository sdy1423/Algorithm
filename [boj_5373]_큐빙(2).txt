#include<iostream>
#include<vector>
#include<string>
using namespace std;
#define up 0
#define down 1
#define front 2
#define back 3
#define left 4
#define right 5
int T, N;
char what, dir;
string a[6][3][3];
void clockwise(int what) {

	string temp = a[what][0][1];
	a[what][0][1] = a[what][1][0];
	a[what][1][0] = a[what][2][1];
	a[what][2][1] = a[what][1][2];
	a[what][1][2] = temp;
	temp = a[what][0][0];
	a[what][0][0] = a[what][2][0];
	a[what][2][0] = a[what][2][2];
	a[what][2][2] = a[what][0][2];
	a[what][0][2] = temp;
}

void right_go() {
	clockwise(right);
	for (int i = 0; i < 3; i++) {
		string temp = a[up][i][2];
		a[up][i][2] = a[front][i][2];
		a[front][i][2] = a[down][i][2];
		a[down][i][2] = a[back][i][2];
		a[back][i][2] = temp;
	}
}
void left_go() {
	clockwise(left);
	for (int i = 0; i < 3; i++) {
		string temp = a[up][i][0];
		a[up][i][0] = a[back][i][0];
		a[back][i][0] = a[down][i][0];
		a[down][i][0] = a[front][i][0];
		a[front][i][0] = temp;
	}
}
void up_go() {
	clockwise(up);
	for (int i = 0; i < 3; i++) {
		string temp = a[front][0][i];
		a[front][0][i] = a[right][2-i][0];
		a[right][2-i][0] = a[back][2][2-i];
		a[back][2][2-i] = a[left][i][2];
		a[left][i][2] = temp;
	}
}
void down_go() {
	clockwise(down);
	for (int i = 0; i < 3; i++) {
		string temp = a[front][2][i];
		a[front][2][i] = a[left][i][0];
		a[left][i][0] = a[back][0][2-i];
		a[back][0][2-i] = a[right][2-i][2];
		a[right][2 - i][2] = temp;
	}
}
void front_go() {
	clockwise(front);
	for (int i = 0; i < 3; i++) {
		string temp = a[up][2][i];
		a[up][2][i] = a[left][2][i];
		a[left][2][i] = a[down][0][2-i];
		a[down][0][2 - i] = a[right][2][i];
		a[right][2][i] = temp;
	}
}
void back_go() {
	clockwise(back);
	for (int i = 0; i < 3; i++) {
		string temp = a[up][0][i];
		a[up][0][i] = a[right][0][i];
		a[right][0][i] = a[down][2][2-i];
		a[down][2][2 - i] = a[left][0][i];
		a[left][0][i] = temp;
	}
}
int main() {
	ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr);
	cin >> T;
	while (T--) {
		cin >> N;
		//a[up][0][0] = "w1", a[up][0][1] = "w2", a[up][0][2] = "w3", a[up][1][0] = "w4", a[up][1][1] = "w5", a[up][1][2] = "w6", a[up][2][0] = "w7", a[up][2][1] = "w8", a[up][2][2] = "w9";
		//a[down][0][0] = "y1", a[down][0][1] = "y2", a[down][0][2] = "y3", a[down][1][0] = "y4", a[down][1][1] = "y5", a[down][1][2] = "y6", a[down][2][0] = "y7", a[down][2][1] = "y8", a[down][2][2] = "y9";
		//a[front][0][0] = "r1", a[front][0][1] = "r2", a[front][0][2] = "r3", a[front][1][0] = "r4", a[front][1][1] = "r5", a[front][1][2] = "r6", a[front][2][0] = "r7", a[front][2][1] = "r8", a[front][2][2] = "r9";
		//a[back][0][0] = "o1", a[back][0][1] = "o2", a[back][0][2] = "o3", a[back][1][0] = "o4", a[back][1][1] = "o5", a[back][1][2] = "o6", a[back][2][0] = "o7", a[back][2][1] = "o8", a[back][2][2] = "o9";
		//a[left][0][0] = "g1", a[left][0][1] = "g2", a[left][0][2] = "g3", a[left][1][0] = "g4", a[left][1][1] = "g5", a[left][1][2] = "g6", a[left][2][0] = "g7", a[left][2][1] = "g8", a[left][2][2] = "g9";
		//a[right][0][0] = "b1", a[right][0][1] = "b2", a[right][0][2] = "b3", a[right][1][0] = "b4", a[right][1][1] = "b5", a[right][1][2] = "b6", a[right][2][0] = "b7", a[right][2][1] = "b8", a[right][2][2] = "b9";
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[up][i][j] = "w";
			}
		}
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[down][i][j] = "y";
			}
		}
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[front][i][j] = "r";
			}
		}
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[back][i][j] = "o";
			}
		}
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[left][i][j] = "g";
			}
		}
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				a[right][i][j] = "b";
			}
		}
		//for (int i = 0; i < 6; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		for (int k = 0; k < 3; k++) {
		//			cout << a[i][j][k];
		//		}
		//		cout << '\n';
		//	}
		//}
		while (N--) {
			cin >> what >> dir;
			int k = 1;
			if (dir == '-') k = 3;
			if (what == 'U') {
				for (int i = 0; i < k; i++) {
					up_go();
				}
			}
			else if (what == 'D') {
				for (int i = 0; i < k; i++) {
					down_go();
				}
			}
			else if (what == 'F') {
				for (int i = 0; i < k; i++) {
					front_go();
				}
			}
			else if (what == 'B') {
				for (int i = 0; i < k; i++) {
					back_go();
				}
			}
			else if (what == 'L') {
				for (int i = 0; i < k; i++) {
					left_go();
				}
			}
			else if (what == 'R') {
				for (int i = 0; i < k; i++) {
					right_go();
				}
			}

		}
		//cout << "up" << '\n';
		for (int i = 0; i < 3; i++) {
			for (int j = 0; j < 3; j++) {
				cout << a[up][i][j];
			}
			cout << '\n';
		}
		//cout << "down" << '\n';
		//for (int i = 0; i < 3; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		cout << a[down][i][j];
		//	}
		//	cout << '\n';
		//}
		//cout << "front" << '\n';
		//for (int i = 0; i < 3; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		cout << a[front][i][j];
		//	}
		//	cout << '\n';
		//}
		//cout << "back" << '\n';
		//for (int i = 0; i < 3; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		cout << a[back][i][j];
		//	}
		//	cout << '\n';
		//}
		//cout << "left" << '\n';
		//for (int i = 0; i < 3; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		cout << a[left][i][j];
		//	}
		//	cout << '\n';
		//}
		//cout << "right" << '\n';
		//for (int i = 0; i < 3; i++) {
		//	for (int j = 0; j < 3; j++) {
		//		cout << a[right][i][j];
		//	}
		//	cout << '\n';
		//}

	}
	return 0;
}